name: Docker Release Push

on:
  push:

jobs:  
  build:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
  
      - name: Build the static content
        run: |
          yarn install
          yarn run build
      - name: Step 3 - Use the Upload Artifact GitHub Action
        uses: actions/upload-artifact@v2
        with: 
          name: skymind-website
          path: build/
  
  deploy:
      needs: build
      name: Push to Docker Hub
      runs-on: ubuntu-latest
      steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: skymind-website
          path: build/

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Extract Version
        id: version_step
        run: |
          echo "##[set-output name=version;]VERSION=${GITHUB_REF#$"refs/tags/v"}"
          echo "##[set-output name=version_tag;]${{ secrets.DOCKER_HUB_USERNAME }}/skyweb:${GITHUB_REF#$"refs/tags/v"}"
          echo "##[set-output name=latest_tag;]${{ secrets.DOCKER_HUB_USERNAME }}/skyweb:nightly"
      
      - name: Print Version
        run: |
          echo ${{steps.version_step.outputs.version_tag}}
          echo ${{steps.version_step.outputs.latest_tag}}
      
      - name: PrepareReg Names
        id: read-docker-image-identifiers
        run: |
          echo VERSION_TAG=$(echo ${{ steps.version_step.outputs.version_tag }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
          echo LASTEST_TAG=$(echo ${{ steps.version_step.outputs.latest_tag  }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

      - run: docker build . -t ${{env.VERSION_TAG}}
      - run: docker push ${{env.VERSION_TAG}}

      - run: docker build . -t ${{env.LASTEST_TAG}}
      - run: docker push ${{env.LASTEST_TAG}}
